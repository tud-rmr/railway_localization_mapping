%
%   Data available at: http://dx.doi.org/10.25534/tudatalib-360
%
%   Author: Hanno Winter
%   Date: 02-Dec-2020; Last revision: 02-Dec-2020
% 

%% Init

loadBsFilenamePatterns

%% Checks

% if ~exist('import_BS_processed_data_executed','var')
%     import_BS_processed_data_executed = false;
% elseif import_BS_processed_data_executed
%     fprintf('Import processed data script already executed!\n');
%     return  
% end % if

%% Processed Data
%
%   Data available at: http://dx.doi.org/10.25534/tudatalib-360
%
%   Filepath or filename has to contain session information, i.e. it has to 
%   contain a string which can be found with the regular 
%   expression '[Ss]ession\d{2}'. Valid strings are, 
%   e.g. 'Session01','session01','session02', etc
%

gnss_javad_processed_data_paths = { ... 
                                    fullfile('Dataset_BS_20190222','2019-02-22_Session01','02_processed','gnss_javad_processed_data_session01.csv') ... 
                                  };
                      
imu_xsens_processed_data_paths = { ... 
                                   fullfile('Dataset_BS_20190222','2019-02-22_Session01','02_processed','imu_xsens_processed_data_session01.csv') ... 
                                 };

speedDist_odometer_processed_data_paths = { ... 
                                            fullfile('Dataset_BS_20190222','2019-02-22_Session01','02_processed','speedDist_odometer_processed_data_session01.csv') ... 
                                          };

speedDist_correvit_processed_data_paths = { ... 
                                            fullfile('Dataset_BS_20190222','2019-02-22_Session01','02_processed','speedDist_correvit_processed_data_session01.csv') ... 
                                          };
                                 
speedDist_siemens_processed_data_paths = { ... 
                                           fullfile('Dataset_BS_20190222','2019-02-22_Session01','02_processed','speedDist_siemens_processed_data_session01.csv') ... 
                                         };
                              
gnss_inatm200stn_processed_data_paths = { ... 
                                          fullfile('Dataset_BS_20190222','2019-02-22_Session01','02_processed','gnss_inatm200stn_processed_data_session01.csv') ... 
                                        };
                         
imu_inatm200stn_processed_data_paths = { ... 
                                         fullfile('Dataset_BS_20190222','2019-02-22_Session01','02_processed','imu_inatm200stn_processed_data_session01.csv') ... 
                                       };

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% GNSS: Javad 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

gnss_javad_limited_processed_data_root_string = ... 
    [ ... 
      gnss_javad_processed_data_root_string, ... 
      '__', ... 
      num2str(start_time([12,13,15,16,18,19])), ...              
      '_', ... 
      num2str(end_time([12,13,15,16,18,19])) ... 
    ];

[out_data, num_files, load_flag] = importFromFile(gnss_javad_processed_data_paths,gnss_javad_limited_processed_data_root_string,'DataType','processed','StartTime',start_time,'EndTime',end_time);
for i = find(load_flag(:)'==1) % save to .mat for faster access in the future
    exportToFile(out_data(i,:),[gnss_javad_limited_processed_data_root_string,'_session',sprintf('%02i',i)],gnss_javad_limited_processed_data_root_string,'SaveTo','mat','NumFiles',num_files(i));
end % for i
assignin('base',gnss_javad_processed_data_root_string,out_data); 
clear out_data

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% IMU: Xsens 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

imu_xsens_limited_processed_data_root_string = ... 
    [ ... 
      imu_xsens_processed_data_root_string, ... 
      '__', ... 
      num2str(start_time([12,13,15,16,18,19])), ...              
      '_', ... 
      num2str(end_time([12,13,15,16,18,19])) ... 
    ];

[out_data, num_files, load_flag] = importFromFile(imu_xsens_processed_data_paths,imu_xsens_limited_processed_data_root_string,'DataType','processed','StartTime',start_time,'EndTime',end_time);
for i = find(load_flag(:)'==1) % save to .mat for faster access in the future
    exportToFile(out_data(i,:),[imu_xsens_limited_processed_data_root_string,'_session',sprintf('%02i',i)],imu_xsens_limited_processed_data_root_string,'SaveTo','mat','NumFiles',num_files(i));
end % for i
assignin('base',imu_xsens_processed_data_root_string,out_data); 
clear out_data

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Speed/Distance: Odometer
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

speedDist_odometer_limited_processed_data_root_string = ... 
    [ ... 
      speedDist_odometer_processed_data_root_string, ... 
      '__', ... 
      num2str(start_time([12,13,15,16,18,19])), ...              
      '_', ... 
      num2str(end_time([12,13,15,16,18,19])) ... 
    ];

[out_data, num_files, load_flag] = importFromFile(speedDist_odometer_processed_data_paths,speedDist_odometer_limited_processed_data_root_string,'DataType','processed','StartTime',start_time,'EndTime',end_time);
for i = find(load_flag(:)'==1) % save to .mat for faster access in the future
    exportToFile(out_data(i,:),[speedDist_odometer_limited_processed_data_root_string,'_session',sprintf('%02i',i)],speedDist_odometer_limited_processed_data_root_string,'SaveTo','mat','NumFiles',num_files(i));
end % for i
assignin('base',speedDist_odometer_processed_data_root_string,out_data); 
clear out_data

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Speed/Distance: Correvit
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

speedDist_correvit_limited_processed_data_root_string = ... 
    [ ... 
      speedDist_correvit_processed_data_root_string, ... 
      '__', ... 
      num2str(start_time([12,13,15,16,18,19])), ...              
      '_', ... 
      num2str(end_time([12,13,15,16,18,19])) ... 
    ];

[out_data, num_files, load_flag] = importFromFile(speedDist_correvit_processed_data_paths,speedDist_correvit_limited_processed_data_root_string,'DataType','processed','StartTime',start_time,'EndTime',end_time);
for i = find(load_flag(:)'==1) % save to .mat for faster access in the future
    exportToFile(out_data(i,:),[speedDist_correvit_limited_processed_data_root_string,'_session',sprintf('%02i',i)],speedDist_correvit_limited_processed_data_root_string,'SaveTo','mat','NumFiles',num_files(i));
end % for i
assignin('base',speedDist_correvit_processed_data_root_string,out_data);
clear out_data

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Speed/Distance: Siemens Radar
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

speedDist_siemens_limited_processed_data_root_string = ... 
    [ ... 
      speedDist_siemens_processed_data_root_string, ... 
      '__', ... 
      num2str(start_time([12,13,15,16,18,19])), ...              
      '_', ... 
      num2str(end_time([12,13,15,16,18,19])) ... 
    ];

[out_data, num_files, load_flag] = importFromFile(speedDist_siemens_processed_data_paths,speedDist_siemens_limited_processed_data_root_string,'DataType','processed','StartTime',start_time,'EndTime',end_time);
for i = find(load_flag(:)'==1) % save to .mat for faster access in the future
    exportToFile(out_data(i,:),[speedDist_siemens_limited_processed_data_root_string,'_session',sprintf('%02i',i)],speedDist_siemens_limited_processed_data_root_string,'SaveTo','mat','NumFiles',num_files(i));
end % for i
assignin('base',speedDist_siemens_processed_data_root_string,out_data); 
clear out_data

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% GNSS: iNat M200 STN
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

gnss_inatm200stn_limited_processed_data_root_string = ... 
    [ ... 
      gnss_inatm200stn_processed_data_root_string, ... 
      '__', ... 
      num2str(start_time([12,13,15,16,18,19])), ...              
      '_', ... 
      num2str(end_time([12,13,15,16,18,19])) ... 
    ];

[out_data, num_files, load_flag] = importFromFile(gnss_inatm200stn_processed_data_paths,gnss_inatm200stn_limited_processed_data_root_string,'DataType','processed','StartTime',start_time,'EndTime',end_time);
for i = find(load_flag(:)'==1) % save to .mat for faster access in the future
    exportToFile(out_data(i,:),[gnss_inatm200stn_limited_processed_data_root_string,'_session',sprintf('%02i',i)],gnss_inatm200stn_limited_processed_data_root_string,'SaveTo','mat','NumFiles',num_files(i));
end % for i
assignin('base',gnss_inatm200stn_processed_data_root_string,out_data);
clear out_data

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% IMU: iNat M200 STN
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

imu_inatm200stn_limited_processed_data_root_string = ... 
    [ ... 
      imu_inatm200stn_processed_data_root_string, ... 
      '__', ... 
      num2str(start_time([12,13,15,16,18,19])), ...              
      '_', ... 
      num2str(end_time([12,13,15,16,18,19])) ... 
    ];

[out_data, num_files, load_flag] = importFromFile(imu_inatm200stn_processed_data_paths,imu_inatm200stn_limited_processed_data_root_string,'DataType','processed','StartTime',start_time,'EndTime',end_time);
for i = find(load_flag(:)'==1) % save to .mat for faster access in the future
    exportToFile(out_data(i,:),[imu_inatm200stn_limited_processed_data_root_string,'_session',sprintf('%02i',i)],imu_inatm200stn_limited_processed_data_root_string,'SaveTo','mat','NumFiles',num_files(i));
end % for i
assignin('base',imu_inatm200stn_processed_data_root_string,out_data); 
clear out_data

%% Finish script

import_BS_processed_data_executed = true;
